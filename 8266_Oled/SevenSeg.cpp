/*
   http://oleddisplay.squix.ch/#/home
*/
#include <Arduino.h>
#include "SSD1306.h"
// 31x20 font
//void setPixel(int16_t x, int16_t y);
//void drawHorizontalLine(int16_t x, int16_t y, int16_t length);
//void drawVerticalLine(int16_t x, int16_t y, int16_t length);
extern SSD1306  display;

/////////////////////////////////////////////////////////////////////
const uint8_t alarm16x16[] = {
	0x00, 0x00, 0x0C, 0x18, 0x1E, 0x3C, 0xEF, 0x7B, 0xF7, 0x77, 0x9A, 0x2C, 0x8C, 0x18, 0x86, 0x30,
	0x86, 0x30, 0xEE, 0x38, 0x06, 0x30, 0x06, 0x30, 0x0C, 0x18, 0x9C, 0x1C, 0xF6, 0x37, 0xE3, 0x63 };
/////////////////////////////////////////////////////////////////////
const uint8_t wifi16x16[] = {
	0x00, 0x00, 0xE0, 0x07, 0xF8, 0x1F, 0xFC, 0x3F, 0x0E, 0x70, 0xE6, 0x67, 0xF0, 0x0F, 0x18, 0x18,
	0xC0, 0x03, 0xE0, 0x07, 0x20, 0x04, 0x80, 0x01, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
/////////////////////////////////////////////////////////////////////
const uint8_t _7Seg8x16[][16] = {
	0x00, 0x7E, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0x7E, 0x00,//0
	0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00,//1
	0x00, 0x7E, 0xFE, 0xC0, 0xC0, 0xC0, 0xC0, 0xFE, 0x7F, 0x03, 0x03, 0x03, 0x03, 0x7F, 0x7E, 0x00,//2
	0x00, 0x7E, 0xFE, 0xC0, 0xC0, 0xC0, 0xC0, 0xFE, 0xFE, 0xC0, 0xC0, 0xC0, 0xC0, 0xFE, 0x7E, 0x00,//3
	0x00, 0x00, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00,//4
	0x00, 0x7E, 0x7F, 0x03, 0x03, 0x03, 0x03, 0x7F, 0xFE, 0xC0, 0xC0, 0xC0, 0xC0, 0xFE, 0x7E, 0x00,//5
	0x00, 0x7E, 0x7F, 0x03, 0x03, 0x03, 0x03, 0x7F, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0x7E, 0x00,//6
	0x00, 0x7E, 0xFE, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00,//7
	0x00, 0x7E, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0x7E, 0x00,//8
	0x00, 0x7E, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0xFE, 0xC0, 0xC0, 0xC0, 0xC0, 0xFE, 0x7E, 0x00,//9
	0x00, 0x1E, 0x3F, 0x33, 0x33, 0x33, 0x3F, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,// C
	0x00, 0x0E, 0x9F, 0x9B, 0x9B, 0x5F, 0x2E, 0x10, 0x08, 0x74, 0xFA, 0xD9, 0xD9, 0xF9, 0x70, 0x00 // %
};
const uint8_t _Heb8x16[][16] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0xC7, 0xC6, 0x4C, 0x7E, 0x32, 0x63, 0x63, 0xC3, 0xC3, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x3F, 0x30, 0x60, 0x60, 0x60, 0x60, 0x60, 0xFF, 0xFF, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x3E, 0x70, 0x70, 0x70, 0x78, 0x6C, 0x66, 0x63, 0x63, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x3F, 0x60, 0xC0, 0xC0, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00,
0x00, 0x00, 0x00, 0x00, 0xDB, 0xDB, 0xDB, 0xDB, 0xCF, 0xCF, 0xC6, 0xEE, 0x7C, 0x38, 0x00, 0x00
};
const uint8_t _HebInv8x16[][16] = {
0x00, 0xFF, 0xFF, 0xFF, 0x3C, 0x38, 0x39, 0xB3, 0x81, 0xCD, 0x9C, 0x9C, 0x3C, 0x3C, 0xFF, 0xFF,
0x00, 0x00, 0xFF, 0xFF, 0xF0, 0xC0, 0xCF, 0x9F, 0x9F, 0x9F, 0x9F, 0x9F, 0x00, 0x00, 0xFF, 0xFF,
0x00, 0x00, 0xFF, 0xFF, 0xE1, 0xC1, 0x8F, 0x8F, 0x8F, 0x87, 0x93, 0x99, 0x9C, 0x9C, 0xFF, 0xFF,
0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x9F, 0x9F, 0x9F, 0x9F, 0x9F, 0x9F, 0x9F, 0x9F, 0xFF, 0xFF,
0x00, 0x00, 0xFF, 0xFF, 0xE0, 0xC0, 0x9F, 0x3F, 0x3F, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0xFF, 0xFF,
0x00, 0x00, 0xFF, 0xFF, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xFF, 0xFF,
0x00, 0x00, 0xFF, 0xFF, 0x24, 0x24, 0x24, 0x24, 0x30, 0x30, 0x39, 0x11, 0x83, 0xC7, 0xFF, 0xFF
};

void draw7Seg8x16(int8_t x, int8_t y, int8_t dig)
{
	display.drawXbm(x, y, 8, 16, _7Seg8x16[dig]);
}

void draw7Seg8x16_temp(int8_t x, int8_t y, float t)
{
	draw7Seg8x16(x, y, (int)t / 10);
	draw7Seg8x16(x + 10, y, (int)t % 10);
	display.fillRect(x + 20, y + 13, 2, 2);
	draw7Seg8x16(x + 24, y, (int)(t * 10) % 10);
	draw7Seg8x16(x + 34, y, 10); //C
}

void draw7Seg8x16_humidity(int8_t x, int8_t y, float h)
{
	draw7Seg8x16(x, y, (int)h / 10);
	draw7Seg8x16(x + 10, y, (int)h % 10);
	draw7Seg8x16(x + 20, y, 11); //%
}

void drawH(int16_t x, int16_t y)
{
  display.drawHorizontalLine(x + 1, y,   14);
  display.drawHorizontalLine(x,   y + 1, 16);
  display.drawHorizontalLine(x + 1, y + 2, 14);
}

void drawV(int16_t x, int16_t y)
{
  display.drawVerticalLine(x  , y + 1, 11);
  display.drawVerticalLine(x + 1, y,   13);
  display.drawVerticalLine(x + 2, y + 1, 11);
}


#define drawA(x,y,c) display.setColor(c); drawH(x + 2,  y)
#define drawG(x,y,c) display.setColor(c); drawH(x + 2,  y + 14)
#define drawD(x,y,c) display.setColor(c); drawH(x + 2,  y + 28)
#define drawF(x,y,c) display.setColor(c); drawV(x,      y + 2)
#define drawB(x,y,c) display.setColor(c); drawV(x + 17, y + 2)
#define drawE(x,y,c) display.setColor(c); drawV(x,      y + 16)
#define drawC(x,y,c) display.setColor(c); drawV(x + 17, y + 16)

void draw0(int16_t x, int16_t y)
{
  drawA(x, y, WHITE); drawB(x, y, WHITE); drawC(x, y, WHITE); drawD(x, y, WHITE); drawE(x, y, WHITE); drawF(x, y, WHITE); drawG(x, y, BLACK);
}

void draw1(int16_t x, int16_t y)
{
  drawA(x, y, BLACK); drawB(x, y, WHITE); drawC(x, y, WHITE); drawD(x, y, BLACK); drawE(x, y, BLACK); drawF(x, y, BLACK); drawG(x, y, BLACK);
}

void draw2(int16_t x, int16_t y)
{
  drawA(x, y, WHITE); drawB(x, y, WHITE); drawC(x, y, BLACK); drawD(x, y, WHITE); drawE(x, y, WHITE); drawF(x, y, BLACK); drawG(x, y, WHITE);
}

void draw3(int16_t x, int16_t y)
{
  drawA(x, y, WHITE); drawB(x, y, WHITE); drawC(x, y, WHITE); drawD(x, y, WHITE); drawE(x, y, BLACK); drawF(x, y, BLACK); drawG(x, y, WHITE);
}

void draw4(int16_t x, int16_t y)
{
  drawA(x, y, BLACK); drawB(x, y, WHITE); drawC(x, y, WHITE); drawD(x, y, BLACK); drawE(x, y, BLACK); drawF(x, y, WHITE); drawG(x, y, WHITE);
}

void draw5(int16_t x, int16_t y)
{
  drawA(x, y, WHITE); drawB(x, y, BLACK); drawC(x, y, WHITE); drawD(x, y, WHITE); drawE(x, y, BLACK); drawF(x, y, WHITE); drawG(x, y, WHITE);
}

void draw6(int16_t x, int16_t y)
{
  drawA(x, y, WHITE); drawB(x, y, BLACK); drawC(x, y, WHITE); drawD(x, y, WHITE); drawE(x, y, WHITE); drawF(x, y, WHITE); drawG(x, y, WHITE);
}

void draw7(int16_t x, int16_t y)
{
  drawA(x, y, WHITE); drawB(x, y, WHITE); drawC(x, y, WHITE); drawD(x, y, BLACK); drawE(x, y, BLACK); drawF(x, y, BLACK); drawG(x, y, BLACK);
}

void draw8(int16_t x, int16_t y)
{

  drawA(x, y, WHITE); drawB(x, y, WHITE); drawC(x, y, WHITE); drawD(x, y, WHITE); drawE(x, y, WHITE); drawF(x, y, WHITE); drawG(x, y, WHITE);
}

void draw9(int16_t x, int16_t y)
{
  drawA(x, y, WHITE); drawB(x, y, WHITE); drawC(x, y, WHITE); drawD(x, y, WHITE); drawE(x, y, BLACK); drawF(x, y, WHITE); drawG(x, y, WHITE);
}

void draw7segDots(bool a, bool b, int16_t x, int16_t y)
{
  if (a)
    display.setColor(WHITE);
  else
    display.setColor(BLACK);

  display.fillRect(x, y + 9, 3, 3);

  if (a)
    display.setColor(WHITE);
  else
    display.setColor(BLACK);
  display.fillRect(x, y + 19, 3, 3);
}

void draw7seg(int16_t n, int16_t x, int16_t y)
{
  switch (n)
  {
    case 0: draw0(x, y); break;
    case 1: draw1(x, y); break;
    case 2: draw2(x, y); break;
    case 3: draw3(x, y); break;
    case 4: draw4(x, y); break;
    case 5: draw5(x, y); break;
    case 6: draw6(x, y); break;
    case 7: draw7(x, y); break;
    case 8: draw8(x, y); break;
    case 9: draw9(x, y); break;
  }
 display.setColor(WHITE);
}

void drawClock(int16_t H, int16_t M, bool dotA, bool dotB, int16_t x, int16_t y)
{ 


  draw7seg(H / 10, x, y);
  draw7seg(H % 10, x + 25, y);
  draw7segDots(dotA, dotB, x + 51, y);
  draw7seg(M / 10, x + 60, y);
  draw7seg(M % 10, x + 85, y);

}
void drawTemp(int16_t T, int16_t x, int16_t y)
{
	draw7seg(T / 10, x, y);
	draw7seg(T % 10, x + 25, y);

	display.drawCircle(x + 53, y + 3, 4);
}
